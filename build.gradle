plugins {
	id 'java'
	id "org.flywaydb.flyway" version "9.8.1"
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.springframework.boot' version '3.2.3'
}

group = 'com.bookingsystem'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

sourceSets {
	clientInterface {
		java {
			srcDirs = ['src/clientInterface/java']
		}
	}
	main {
		java {
			srcDirs = ['src/main/java']
			compileClasspath += clientInterface.output
			runtimeClasspath += clientInterface.output
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
			compileClasspath += clientInterface.output
			runtimeClasspath += clientInterface.output
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}

dependencies {
	//SpringBoot dependencies
	def springBootVersion = '3.2.3'
	implementation ("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")

	//Metrics dependencies
	def ioMicrometerVersion = '1.12.4'
	implementation("io.micrometer:micrometer-core:${ioMicrometerVersion}")
	implementation("io.micrometer:micrometer-registry-prometheus:${ioMicrometerVersion}")

	implementation ("mysql:mysql-connector-java:8.0.29")

	testImplementation ("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

task startDocker(){
	doLast {
		exec {
			commandLine 'docker', 'compose', 'up', '--force-recreate', '--build'
		}
	}
}